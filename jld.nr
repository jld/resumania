.na
.nh
.ad c
.ft R
Jed Davis\c
.br
.na
.ad c
.ft R
<jld@xlerb\&.net>\c
.br
.na
.ad c
.ft R
2000 Walnut St\&. #215, Boulder, CO 80302; 415-845-4647\c
.br
.na

.in 0
.ft B
Work History\c
.br
.in 1
.in 1
.ft B
Mozilla Corporation\c
.br
.in 2
.ft B
Software Engineer\c
.ft R
, February 2013 - present\c
.br
.in +2
.ti -2
\fR*
.ft R
Designed and implemented system-level security sandboxing technology for a Web renderer\c
.br
.ti -2
\fR*
.ft R
Refactored legacy code for asynchrony and process separation\c
.br
.ti -2
\fR*
.ft R
Developed tools to investigate system-level performance on a novel mobile OS\c
.br
.in 1
.ft B
VMware, vSphere (ESXi) Kernel Core Team\c
.br
.in 2
.ft B
Member of Technical Staff\c
.ft R
, May 2010 - January 2013\c
.br
.in +2
.ti -2
\fR*
.ft R
Maintained subsystems ranging from \c
.ft R
memory allocation to filesystem implementation to error reporting\c
.br
.ti -2
\fR*
.ft R
Improved filesystem and memory management infrastructure owned by other groups\c
.br
.ti -2
\fR*
.ft R
Debugged and fixed a variety of code, kernel and userlevel, \c
.ft R
as part of rotating bug triage duties\c
.br
.ti -2
\fR*
.ft R
Upgraded the kernel build to a newer C compiler, \c
.ft R
modifying the compiler to make this possible\c
.br
.ti -2
\fR*
.ft R
Implemented a system for kernel-specialized low-overhead detection of \c
.ft R
a class of memory usage errors\c
.br
.in 1
.ft B
Previously:\c
.br
.in 2
.in +2
.ti -2
\fR*
.ft R
Researched potential applications of NAND flash memory for transparent persistence \c
.ft R
in garbage-collected managed runtime environments\&.\c
.br
.ti -2
\fR*
.ft R
Improved crash recovery efficiency of NetBSD's software RAID driver\c
.br
.ti -2
\fR*
.ft R
Gained primary responsibility for a small ISP's email system; significantly improved its performance\c
.br
.ti -2
\fR*
.ft R
Analyzed and corrected defects in the NetBSD kernel, including Xen paravirtual drivers\c
.br

.in 0
.ft B
Education\c
.br
.in 1
.in 1
.ft B
Northeastern University, Boston, MA\c
.br
.in 2
.in +2
.ti -2
\fR*
.ft B
M\&.S\&.\c
.ft R
, Computer Science, 2010\c
.br
.in 1
.ft B
Oberlin College, Oberlin, OH\c
.br
.in 2
.in +2
.ti -2
\fR*
.ft B
B\&.A\&.\c
.ft R
, Computer Science (high honors) and Mathematics, 2003\c
.br
.ti -2
\fR*
.ft R
Honors project: composable object-orientation for agent-based modelling\c
.br

.in 0
.ft B
Skills\c
.br
.in 1
.in +2
.ti -2
\fR*
.ft B
Programming Languages: \c
.ft R
C, C++, Coq, Erlang, Forth, Haskell, JavaScript, \c
.ft R
m4\c
.ft R
, OCaml, Perl, Python, Rust, Scheme, \c
.ft R
sh\c
.ft R
/\c
.ft R
sed\c
.ft R
/\c
.ft R
AWK; \c
.ft R
TeX\c
.ft R
/\c
.ft R
LaTeX\c
.ft R
, x86 assembly (i386, x86_64)\c
.br
.ti -2
\fR*
.ft B
Operating Systems: \c
.ft R
Linux (Debian), FreeBSD, NetBSD, VMware ESXi\c
.br
.ti -2
\fR*
.ft B
Revision Control: \c
.ft R
Git, Mercurial, Subversion, Perforce, CVS\c
.br

.in 0
.ft B
Miscellaneous\c
.br
.in 1
.in +2
.ti -2
\fR*
.ft R
Judges' Prize and 3rd place, ICFP Programming Competition, 2007 (as team of one)\c
.br
.ti -2
\fR*
.ft R
Implemented the Rust language's optional pointer optimization\c
.br
.ti -2
\fR*
.ft R
Lost the 20th International Obfuscated C Code Competition\c
.br

.ad c
.ft I
References available upon request\c
.br
.na
.pl \n(nlu
